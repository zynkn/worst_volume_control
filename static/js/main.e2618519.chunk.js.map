{"version":3,"sources":["IconVolume.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["IconVolume","width","style","fill","svg","version","x","y","viewBox","requiredExtensions","height","d","App","callback","useState","setX","setY","count","setCount","shoot","setShoot","result","setResult","interval","React","pressing","setPressing","useEffect","timerId","setTimeout","clearTimeout","onMouseDown","onMouseUp","onMouseLeave","onTouchStart","onTouchEnd","useLongPress","prev","_x","_y","x1","inc","inclination","console","log","setInterval","clearInterval","rotate","useSpring","display","cursor","transform","translate","visibility","hidden","handleMouseDown","handleMouseUp","div","marginRight","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e2618519.chunk.js","sourcesContent":["import React from 'react';\nimport {animated,} from 'react-spring'\n\n\nexport default function IconVolume({width=48, fill=\"#fff\", style }:any){\n\n  return (\n    <animated.svg width={width} style={style} version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\">\n    <switch>\n      <foreignObject requiredExtensions=\"http://ns.adobe.com/AdobeIllustrator/10.0/\" x=\"0\" y=\"0\" width=\"1\" height=\"1\"/>\n      <g>\n        <g>\n          <path fill=\"#fff\" d=\"M69.9,24.6c-1.7-2.3-4.9-2.9-7.3-1.2c-2.3,1.7-2.9,4.9-1.2,7.3c4.1,5.7,6.2,12.3,6.2,19.3c0,7-2.2,13.7-6.2,19.3     c-1.7,2.3-1.2,5.6,1.2,7.3c0.9,0.7,2,1,3,1c1.6,0,3.2-0.7,4.2-2.2c5.4-7.4,8.2-16.2,8.2-25.4C78.1,40.8,75.2,32,69.9,24.6z\"/>\n          <path fill=\"#fff\" d=\"M83.1,11c-1.8-2.2-5.1-2.6-7.3-0.8c-2.2,1.8-2.6,5.1-0.8,7.3C82.5,26.8,86.4,38,86.4,50c0,12-4,23.2-11.4,32.5     c-1.8,2.2-1.4,5.5,0.8,7.3c1,0.8,2.1,1.1,3.2,1.1c1.5,0,3-0.7,4.1-1.9C92,78,96.8,64.1,96.8,50C96.8,35.9,92,22,83.1,11z\"/>\n          <path fill=\"#fff\" d=\"M44.2,4.1L23.6,29.2h-16c-2.5,0-4.5,2-4.5,4.5v32.6c0,2.5,2,4.5,4.5,4.5h16l20.5,25.1c2.7,3.2,7.9,1.4,7.9-2.8V7     C52.1,2.8,46.8,0.9,44.2,4.1z\"/>\n   \n          <path d=\"M69.9,24.6c-1.7-2.3-4.9-2.9-7.3-1.2c-2.3,1.7-2.9,4.9-1.2,7.3c4.1,5.7,6.2,12.3,6.2,19.3c0,7-2.2,13.7-6.2,19.3     c-1.7,2.3-1.2,5.6,1.2,7.3c0.9,0.7,2,1,3,1c1.6,0,3.2-0.7,4.2-2.2c5.4-7.4,8.2-16.2,8.2-25.4C78.1,40.8,75.2,32,69.9,24.6z\"/>\n          <path d=\"M83.1,11c-1.8-2.2-5.1-2.6-7.3-0.8c-2.2,1.8-2.6,5.1-0.8,7.3C82.5,26.8,86.4,38,86.4,50c0,12-4,23.2-11.4,32.5     c-1.8,2.2-1.4,5.5,0.8,7.3c1,0.8,2.1,1.1,3.2,1.1c1.5,0,3-0.7,4.1-1.9C92,78,96.8,64.1,96.8,50C96.8,35.9,92,22,83.1,11z\"/>\n          <path d=\"M44.2,4.1L23.6,29.2h-16c-2.5,0-4.5,2-4.5,4.5v32.6c0,2.5,2,4.5,4.5,4.5h16l20.5,25.1c2.7,3.2,7.9,1.4,7.9-2.8V7     C52.1,2.8,46.8,0.9,44.2,4.1z\"/>\n        </g>\n      </g>\n    </switch>\n\n    </animated.svg>\n  )\n}","import React from 'react';\nimport {useSpring, animated, interpolate} from 'react-spring'\nimport { useRef, useState, useEffect } from 'react'\nimport ResizeObserver from 'resize-observer-polyfill'\nimport IconVolume from './IconVolume'\n\nconst velocity = 100;\nconst gravity = 9.8;\nconst time = 1;\n\nfunction App() {\n  const [x, setX] = useState(0);\n  const [y, setY] = useState(0);\n  const [count, setCount] = useState(0);\n  const [shoot, setShoot] = useState(false);\n  const [result, setResult] = useState(0);\n  const {onMouseDown, onMouseUp, onMouseLeave} = useLongPress(()=>{\n    setCount((prev:number)=>{\n      return prev < 300 ? prev+1 : prev;\n    })\n  },10);\n  useQuadratic(result, 200,(_x:any,_y:any)=>{\n    setX(_x+50);\n    setY(_y);\n  });\n\n  // useParabola(result*15/100, Number(value), (_x:any,_y:any)=>{\n  //   setX(_x);\n  //   setY(_y);\n  // });\n  //console.log(x,y);\n\n  \n  const rotate = useSpring({ display: 'inline-block', cursor: 'pointer', transform: `rotate(-${count*15/100}deg)`});\n  const fill = useSpring({fill: `rgba(0,208,132,${count/200})` });\n  const translate = useSpring({ transform: `translate(${x -50}px, ${y * -1}px)`, visibility: 'visible'});\n  const hidden = useSpring({ visibility: 'hidden', transform: `translate(-50px, 0px)`});\n\n\n  function handleMouseDown(){\n    onMouseDown();\n    setShoot(false);\n    setResult(0);\n    setX(0);\n    setY(0);\n    setCount(0);\n  }\n  function handleMouseUp(){\n    onMouseUp();\n\n    setResult(count);\n    setShoot(true);\n    setCount(0);\n  }\n  function handleMouseLeave(){\n    //setResult(count);\n    // onMouseLeave();\n    // setShoot(true);\n  }\n  return (\n    <>\n      <animated.div style={{...rotate, marginRight: '16px'}}  onMouseDown={handleMouseDown} onTouchStart={handleMouseDown} onTouchEnd={handleMouseUp} onMouseUp={handleMouseUp} onMouseLeave={handleMouseLeave}>\n          <IconVolume style={fill} />\n        </animated.div>\n      <div  className=\"main\">\n        {/* <animated.div className=\"content\">{count}</animated.div>\n        <animated.div style={{color: 'white'}}>{count*15}</animated.div> */}\n        <animated.div className=\"dot\" style={shoot ? translate : hidden} />\n        <div className=\"bar\" />\n      </div>\n\n\n    </>\n    \n  )\n}\n\nexport default App;\n\n\nfunction useQuadratic(width: number, height:number, callback:any){\n  // for(let x = x1; x<=width/2; x++){\n  //   let y = (inclination * -1)*x*x + height;\n  //   console.log(x,y);\n  // }\n\n  React.useEffect(()=>{\n    if(width !== 0){\n      let x1 = (width/2) * -1;\n      let inc = width/100;\n      let inclination = height/(x1*x1);\n      console.log(`기울기 ${inclination}`)\n      let timerId:any = null;\n      let x = 0;\n      timerId = setInterval(()=>{\n        let y = ((inclination * -1) * (x+x1) * (x+x1) + height ) < 0 ? 0 : ((inclination * -1) * (x+x1) * (x+x1) + height );\n        //console.log(x,y);\n        callback(x,y);\n        if(x>=width){\n          clearInterval(timerId);\n        }\n        x+=inc;\n\n        \n      },10);\n    }\n\n  },[width]);\n}\nfunction useParabola(degree:number,velocity:number, callback:any){\n  React.useEffect(()=>{\n    let timerId:any = null;\n    let ms = 0;\n    if(degree !==0){\n      const RADIAN = degree*Math.PI/180;\n      let top = velocity*Math.sin(RADIAN)/gravity;\n      console.log(`입력한 각도 : ${degree}, 최대 높이 도달 시간 : ${top}seconds, 속도: ${velocity}`);\n      let x = velocity*Math.cos(RADIAN)*top;\n      let y = velocity*Math.sin(RADIAN)*top - (gravity*top*top*0.5);\n      console.log(`최대 도달 좌표 x: ${x}, y: ${y}`);\n      let _x = velocity*Math.cos(RADIAN)*top*2;\n      let _y = velocity*Math.sin(RADIAN)*top*2 - (gravity*top*4*top*0.5);\n      console.log(`착지 예상 좌표 x: ${_x}, y: ${_y}`);\n\n        timerId = setInterval(()=>{\n          let s = ms/1000;\n          let __x = velocity*Math.cos(RADIAN)*s;\n          let __y = velocity*Math.sin(RADIAN)*s - (gravity*s*s*0.5);\n          console.log(ms, __x,__y);\n          callback(__x,__y);\n          if(__y < 0){\n            clearInterval(timerId);\n          }else{\n            ms+=100;\n          }\n        }, 10);\n    }\n  },[degree]);\n  return {x:1,y:1};\n}\n\nfunction useLongPress(callback:any = ()=>{}, interval:number = 1000){\n  const [pressing, setPressing] = React.useState(false);\n\n  React.useEffect(()=>{\n    let timerId:any = null;\n    if(pressing){\n      timerId = setTimeout(callback, interval);\n    }else{\n      clearTimeout(timerId);\n    }\n    return() => {\n      clearTimeout(timerId);\n    }\n  },[callback, interval, setPressing]);\n\n  return {\n    onMouseDown: ()=>setPressing(true),\n    onMouseUp: () => setPressing(false),\n    onMouseLeave: () => setPressing(false),\n    onTouchStart: () => setPressing(true),\n    onTouchEnd: () => setPressing(false),\n  };\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}